{{- range $nodeGroupName, $nodeGroup := .Values.deployment.spec.nodeGroups }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $nodeGroupName }}
  labels:
    nodeGroup: {{ $nodeGroupName }}
    {{- with $.Values.defaultLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  serviceName: all
  replicas: {{ $nodeGroup.replicas }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      nodeGroup: {{ $nodeGroupName }}
      {{- with $.Values.defaultLabels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      annotations:
        {{- if index $.Values "extensions.linkerd" }}
        linkerd.io/inject: enabled
        {{- end }}
      labels:
        nodeGroup: {{ $nodeGroupName }}
        {{- with $.Values.defaultLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30

      securityContext:
        fsGroup: 0
        runAsUser: 1337

      initContainers:
        - name: configure-sysctl
          image: {{ $.Values.image }}
          imagePullPolicy: {{ $.Values.imagePullPolicy }}
          securityContext:
            privileged: true
            runAsUser: 0
          command:
            - sysctl
            - -w
            - vm.max_map_count=262144

      containers:
        - name: exp
          image: {{ $.Values.image }}
          imagePullPolicy: {{ $.Values.imagePullPolicy }}

          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1337

          resources:
            limits:
              cpu: {{ $nodeGroup.resources.cpu }}
              memory: {{ $nodeGroup.resources.memory }}
            requests:
              cpu: {{ $nodeGroup.resources.cpu }}
              memory: {{ $nodeGroup.resources.memory }}

          ports:
          - name: xp-stats
            containerPort: 2609
            protocol: TCP
          - name: xp-main
            containerPort: 8080
            protocol: TCP
          - name: es-http
            containerPort: 9200
            protocol: TCP
          - name: es-transport
            containerPort: 9300
            protocol: TCP

          env:
          - name: XP_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: XP_NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: SU_PASS_HASH
            valueFrom:
              secretKeyRef:
                name: su
                key: suPassHash
                optional: false
          {{- range $key, $value := $nodeGroup.env }}
          - name: {{ $key }}
            value: {{ $value }}
          {{- end }}
          {{- if not (index $nodeGroup.env "JAVA_OPTS") }}
          - name: JAVA_OPTS
            value: '-XX:+UseContainerSupport -XX:MinRAMPercentage=20 -XX:InitialRAMPercentage=30
                        -XX:MaxRAMPercentage={{ if and $nodeGroup.master (not $nodeGroup.data) }}75{{ else }}50{{ end }} -Djsse.enableSNIExtension=true -XX:+UseConcMarkSweepGC
                        -XX:+CMSParallelRemarkEnabled -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=60
                        -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark -XX:-HeapDumpOnOutOfMemoryError
                        -XX:HeapDumpPath={{ $.Values.heapDumpLocation }}/oom.hprof'
          {{- end }}
          livenessProbe:
            {{- with $.Values.livenessProbe }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          readinessProbe:
            {{- with $.Values.readinessProbe }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

          volumeMounts:
            {{- range $volumeName, $volumeSize := $nodeGroup.resources.disks }}
            - name: {{ $volumeName }}
              mountPath: {{ index $.Values.volumeMounts $volumeName }}
            {{- end }}
            {{- range $volumeName, $volumeSize := $.Values.deployment.spec.nodesSharedDisks }}
            - name: $volumeName
              mountPath: {{ index $.Values.volumeMounts $volumeName }}
              subPath: {{ $.Values.deployment.name }}/{{ $volumeName }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ $nodeGroupName }}
        {{- range $volumeName, $volumeSize := $.Values.deployment.spec.nodesSharedDisks }}
        - name: {{ $volumeName }}
          persistentVolumeClaim:
            claimName: {{ $volumeName }}
        {{- end }}

  volumeClaimTemplates:
    {{- range $volumeName, $volumeSize := $nodeGroup.resources.disks }}
    - metadata:
        name: {{ $volumeName }}
        labels:
          nodeGroup: {{ $nodeGroupName }}
          {{- with $.Values.defaultLabels }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      spec:
        storageClassName: {{ $.Values.defaultStorageClass }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ $volumeSize }}
    {{- end }}
{{- end }}