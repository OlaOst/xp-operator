# Create ingresses
{{- range $mapping := .Values.vhost.spec.mappings }}
{{- if $mapping.options.ingress }}
{{ $hash := substr 0 10 (sha256sum (list $.Values.vhost.name $mapping.source | join "" )) -}}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $.Values.vhost.name }}-{{ $hash }}
  namespace: {{ $.Values.vhost.namespace }}
  labels:
    {{ $.Values.labelKeys.managed }}: true
    {{- with $.Values.defaultLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  ownerReferences:
    {{- with $.Values.ownerReferences }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{ $.Values.annotationKeys.applyPriority }}: "100"
    {{ $.Values.annotationKeys.vHostName }}: {{ $.Values.vhost.name }}
    {{- if $.Values.vhost.spec.options.dnsRecord }}
    enonic.cloud/dns.hostname: {{ $.Values.vhost.spec.host }}
    enonic.cloud/dns.heritage: {{ list "heritage=ec-operator,id=" $.Values.clusterId | join "" }}
    {{- end }}
    {{- if $.Values.vhost.spec.options.cdn }}
    enonic.cloud/dns.cdn: "true"
    {{- end }}
    {{- if $.Values.vhost.issuer }}
    cert-manager.io/cluster-issuer: {{ $.Values.vhost.issuer }}
    {{- end }}
    {{- with $mapping.options.ingressAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

spec:
  rules:
    - host: {{ $.Values.vhost.spec.host }}
      http:
        paths:
          - backend:
              serviceName: {{ $mapping.nodeGroup }}
              servicePort: 8080
            path: {{ $mapping.source }}
  {{- if $.Values.vhost.spec.certificate }}
  tls:
    - hosts:
        - {{ $.Values.vhost.spec.host }}
      secretName: {{ if $.Values.vhost.issuer }}{{ $.Values.vhost.name }}-cert{{ else }}{{ $.Values.vhost.spec.certificate.identifier }}{{ end }}
  {{- end }}
{{- end }}
{{- end }}