---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  annotations:
    neverOverwrite: "true"
  labels:
    nodeGroup: "data"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "data"
---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "extra-config"
data:
  java.security.properties: "networkaddress.cache.ttl=30"
---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  annotations:
    neverOverwrite: "true"
  labels:
    nodeGroup: "frontend"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "frontend"
---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  annotations:
    neverOverwrite: "true"
  labels:
    nodeGroup: "master"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "master"
---
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "blobstore"
spec:
  accessModes:
  - "ReadWriteMany"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: "standard"
---
apiVersion: "v1"
kind: "PersistentVolumeClaim"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "snapshots"
spec:
  accessModes:
  - "ReadWriteMany"
  resources:
    requests:
      storage: "2Gi"
  storageClassName: "standard"
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "all"
spec:
  clusterIP: "None"
  ports:
  - name: "xp-metrics"
    port: 2609
    protocol: "TCP"
    targetPort: 2609
  - name: "xp-management"
    port: 4848
    protocol: "TCP"
    targetPort: 4848
  - name: "xp-main"
    port: 8080
    protocol: "TCP"
    targetPort: 8080
  - name: "es-api"
    port: 9200
    protocol: "TCP"
    targetPort: 9200
  - name: "es-transport"
    port: 9300
    protocol: "TCP"
    targetPort: 9300
  publishNotReadyAddresses: true
  selector:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  sessionAffinity: "None"
  type: "ClusterIP"
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    nodeGroup: "data"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "data"
spec:
  clusterIP: "None"
  ports:
  - name: "xp-metrics"
    port: 2609
    protocol: "TCP"
    targetPort: 2609
  - name: "xp-management"
    port: 4848
    protocol: "TCP"
    targetPort: 4848
  - name: "xp-main"
    port: 8080
    protocol: "TCP"
    targetPort: 8080
  - name: "es-api"
    port: 9200
    protocol: "TCP"
    targetPort: 9200
  - name: "es-transport"
    port: 9300
    protocol: "TCP"
    targetPort: 9300
  publishNotReadyAddresses: true
  selector:
    nodeGroup: "data"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  sessionAffinity: "None"
  type: "ClusterIP"
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    nodeGroup: "frontend"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "frontend"
spec:
  clusterIP: "None"
  ports:
  - name: "xp-metrics"
    port: 2609
    protocol: "TCP"
    targetPort: 2609
  - name: "xp-management"
    port: 4848
    protocol: "TCP"
    targetPort: 4848
  - name: "xp-main"
    port: 8080
    protocol: "TCP"
    targetPort: 8080
  - name: "es-api"
    port: 9200
    protocol: "TCP"
    targetPort: 9200
  - name: "es-transport"
    port: 9300
    protocol: "TCP"
    targetPort: 9300
  publishNotReadyAddresses: true
  selector:
    nodeGroup: "frontend"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  sessionAffinity: "None"
  type: "ClusterIP"
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    nodeGroup: "master"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "master"
spec:
  clusterIP: "None"
  ports:
  - name: "xp-metrics"
    port: 2609
    protocol: "TCP"
    targetPort: 2609
  - name: "xp-management"
    port: 4848
    protocol: "TCP"
    targetPort: 4848
  - name: "xp-main"
    port: 8080
    protocol: "TCP"
    targetPort: 8080
  - name: "es-api"
    port: 9200
    protocol: "TCP"
    targetPort: 9200
  - name: "es-transport"
    port: 9300
    protocol: "TCP"
    targetPort: 9300
  publishNotReadyAddresses: true
  selector:
    nodeGroup: "master"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  sessionAffinity: "None"
  type: "ClusterIP"
---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  labels:
    nodeGroup: "data"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "data"
spec:
  podManagementPolicy: "Parallel"
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      nodeGroup: "data"
      cloud: "mycloud"
      managedBy: "ec-operator"
      name: "qaxp"
      project: "myproject"
  serviceName: "all"
  template:
    metadata:
      labels:
        nodeGroup: "data"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
    spec:
      containers:
      - env:
        - name: "XP_NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "metadata.name"
        - name: "XP_NODE_IP"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "status.podIP"
        - name: "SU_PASS_HASH"
          valueFrom:
            secretKeyRef:
              key: "passHash"
              name: "su"
              optional: false
        - name: "JAVA_OPTS"
          value: "My java opts"
        image: "7.1.2"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 4
          httpGet:
            httpHeaders:
            - name: "Host"
              value: "healthcheck"
            path: "/"
            port: 8080
            scheme: "HTTP"
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: "exp"
        ports:
        - containerPort: 2609
          name: "xp-stats"
          protocol: "TCP"
        - containerPort: 8080
          name: "xp-main"
          protocol: "TCP"
        - containerPort: 9200
          name: "es-http"
          protocol: "TCP"
        - containerPort: 9300
          name: "es-transport"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 5
          httpGet:
            httpHeaders:
            - name: "Host"
              value: "healthcheck"
            path: "/"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "2"
            memory: "2Gi"
        securityContext:
          capabilities:
            drop:
            - "ALL"
          runAsNonRoot: true
          runAsUser: 1337
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
        volumeMounts:
        - mountPath: "/enonic-xp/home/config"
          name: "config"
        - mountPath: "/enonic-xp/home/extra-config"
          name: "extra-config"
        - mountPath: "/enonic-xp/home/data"
          name: "export"
        - mountPath: "/enonic-xp/home/repo/index"
          name: "index"
        - mountPath: "/enonic-xp/home/repo/blob"
          name: "blobstore"
        - mountPath: "/enonic-xp/home/snapshots"
          name: "snapshots"
      dnsPolicy: "ClusterFirst"
      initContainers:
      - command:
        - "sysctl"
        - "-w"
        - "vm.max_map_count=262144"
        image: "7.1.2"
        imagePullPolicy: "IfNotPresent"
        name: "configure-sysctl"
        resources: {}
        securityContext:
          privileged: true
          runAsUser: 0
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      - command:
        - "ash"
        - "-c"
        - "sleep 5; x=\"0\"; while [ \"$x\" == \"0\" ]; do nslookup ${XP_NODE_NAME}.all\
          \ && x=\"1\"; sleep 2; done"
        env:
        - name: "XP_NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "metadata.name"
        image: "alpine:3.10"
        imagePullPolicy: "IfNotPresent"
        name: "wait-for-dns"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      securityContext:
        fsGroup: 0
        runAsUser: 1337
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: "data"
        name: "config"
      - configMap:
          defaultMode: 420
          name: "extra-config"
        name: "extra-config"
      - name: "blobstore"
        persistentVolumeClaim:
          claimName: "blobstore"
      - name: "snapshots"
        persistentVolumeClaim:
          claimName: "snapshots"
  updateStrategy:
    type: "RollingUpdate"
  volumeClaimTemplates:
  - apiVersion: "v1"
    kind: "PersistentVolumeClaim"
    metadata:
      labels:
        nodeGroup: "data"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
      name: "export"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "4Gi"
      storageClassName: "standard"
      volumeMode: "Filesystem"
  - apiVersion: "v1"
    kind: "PersistentVolumeClaim"
    metadata:
      labels:
        nodeGroup: "data"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
      name: "index"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "5Gi"
      storageClassName: "standard"
      volumeMode: "Filesystem"
---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  labels:
    nodeGroup: "frontend"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "frontend"
spec:
  podManagementPolicy: "Parallel"
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      nodeGroup: "frontend"
      cloud: "mycloud"
      managedBy: "ec-operator"
      name: "qaxp"
      project: "myproject"
  serviceName: "all"
  template:
    metadata:
      labels:
        nodeGroup: "frontend"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
    spec:
      containers:
      - env:
        - name: "XP_NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "metadata.name"
        - name: "XP_NODE_IP"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "status.podIP"
        - name: "SU_PASS_HASH"
          valueFrom:
            secretKeyRef:
              key: "passHash"
              name: "su"
              optional: false
        - name: "CUSTOM_ENV"
          value: "myenvvar"
        - name: "JAVA_OPTS"
          value: "-Djava.security.properties=/enonic-xp/home/extra-config/java.security.properties\
            \ -XX:+UseContainerSupport -XX:MinRAMPercentage=20 -XX:InitialRAMPercentage=30\
            \ -XX:MaxRAMPercentage=50 -Djsse.enableSNIExtension=true -XX:+UseConcMarkSweepGC\
            \ -XX:+CMSParallelRemarkEnabled -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=60\
            \ -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark -XX:-HeapDumpOnOutOfMemoryError\
            \ -XX:HeapDumpPath=/enonic-xp/home/exports/dumps/oom.hprof"
        image: "7.1.2"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 4
          httpGet:
            httpHeaders:
            - name: "Host"
              value: "healthcheck"
            path: "/"
            port: 8080
            scheme: "HTTP"
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: "exp"
        ports:
        - containerPort: 2609
          name: "xp-stats"
          protocol: "TCP"
        - containerPort: 8080
          name: "xp-main"
          protocol: "TCP"
        - containerPort: 9200
          name: "es-http"
          protocol: "TCP"
        - containerPort: 9300
          name: "es-transport"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 5
          httpGet:
            httpHeaders:
            - name: "Host"
              value: "healthcheck"
            path: "/"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "3"
            memory: "3Gi"
          requests:
            cpu: "3"
            memory: "3Gi"
        securityContext:
          capabilities:
            drop:
            - "ALL"
          runAsNonRoot: true
          runAsUser: 1337
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
        volumeMounts:
        - mountPath: "/enonic-xp/home/config"
          name: "config"
        - mountPath: "/enonic-xp/home/extra-config"
          name: "extra-config"
        - mountPath: "/enonic-xp/home/data"
          name: "export"
        - mountPath: "/enonic-xp/home/work"
          name: "work"
        - mountPath: "/enonic-xp/home/repo/blob"
          name: "blobstore"
        - mountPath: "/enonic-xp/home/snapshots"
          name: "snapshots"
      dnsPolicy: "ClusterFirst"
      initContainers:
      - command:
        - "sysctl"
        - "-w"
        - "vm.max_map_count=262144"
        image: "7.1.2"
        imagePullPolicy: "IfNotPresent"
        name: "configure-sysctl"
        resources: {}
        securityContext:
          privileged: true
          runAsUser: 0
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      - command:
        - "ash"
        - "-c"
        - "sleep 5; x=\"0\"; while [ \"$x\" == \"0\" ]; do nslookup ${XP_NODE_NAME}.all\
          \ && x=\"1\"; sleep 2; done"
        env:
        - name: "XP_NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "metadata.name"
        image: "alpine:3.10"
        imagePullPolicy: "IfNotPresent"
        name: "wait-for-dns"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      securityContext:
        fsGroup: 0
        runAsUser: 1337
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: "frontend"
        name: "config"
      - configMap:
          defaultMode: 420
          name: "extra-config"
        name: "extra-config"
      - name: "blobstore"
        persistentVolumeClaim:
          claimName: "blobstore"
      - name: "snapshots"
        persistentVolumeClaim:
          claimName: "snapshots"
  updateStrategy:
    type: "RollingUpdate"
  volumeClaimTemplates:
  - apiVersion: "v1"
    kind: "PersistentVolumeClaim"
    metadata:
      labels:
        nodeGroup: "frontend"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
      name: "export"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "6Gi"
      storageClassName: "standard"
      volumeMode: "Filesystem"
  - apiVersion: "v1"
    kind: "PersistentVolumeClaim"
    metadata:
      labels:
        nodeGroup: "frontend"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
      name: "work"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "7Gi"
      storageClassName: "standard"
      volumeMode: "Filesystem"
---
apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  labels:
    nodeGroup: "master"
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "master"
spec:
  podManagementPolicy: "Parallel"
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      nodeGroup: "master"
      cloud: "mycloud"
      managedBy: "ec-operator"
      name: "qaxp"
      project: "myproject"
  serviceName: "all"
  template:
    metadata:
      labels:
        nodeGroup: "master"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
    spec:
      containers:
      - env:
        - name: "XP_NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "metadata.name"
        - name: "XP_NODE_IP"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "status.podIP"
        - name: "SU_PASS_HASH"
          valueFrom:
            secretKeyRef:
              key: "passHash"
              name: "su"
              optional: false
        - name: "JAVA_OPTS"
          value: "-Djava.security.properties=/enonic-xp/home/extra-config/java.security.properties\
            \ -XX:+UseContainerSupport -XX:MinRAMPercentage=20 -XX:InitialRAMPercentage=30\
            \ -XX:MaxRAMPercentage=75 -Djsse.enableSNIExtension=true -XX:+UseConcMarkSweepGC\
            \ -XX:+CMSParallelRemarkEnabled -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=60\
            \ -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark -XX:-HeapDumpOnOutOfMemoryError\
            \ -XX:HeapDumpPath=/enonic-xp/home/exports/dumps/oom.hprof"
        image: "7.1.2"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 4
          httpGet:
            httpHeaders:
            - name: "Host"
              value: "healthcheck"
            path: "/"
            port: 8080
            scheme: "HTTP"
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: "exp"
        ports:
        - containerPort: 2609
          name: "xp-stats"
          protocol: "TCP"
        - containerPort: 8080
          name: "xp-main"
          protocol: "TCP"
        - containerPort: 9200
          name: "es-http"
          protocol: "TCP"
        - containerPort: 9300
          name: "es-transport"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 5
          httpGet:
            httpHeaders:
            - name: "Host"
              value: "healthcheck"
            path: "/"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        securityContext:
          capabilities:
            drop:
            - "ALL"
          runAsNonRoot: true
          runAsUser: 1337
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
        volumeMounts:
        - mountPath: "/enonic-xp/home/config"
          name: "config"
        - mountPath: "/enonic-xp/home/extra-config"
          name: "extra-config"
        - mountPath: "/enonic-xp/home/data"
          name: "export"
        - mountPath: "/enonic-xp/home/repo/blob"
          name: "blobstore"
        - mountPath: "/enonic-xp/home/snapshots"
          name: "snapshots"
      dnsPolicy: "ClusterFirst"
      initContainers:
      - command:
        - "sysctl"
        - "-w"
        - "vm.max_map_count=262144"
        image: "7.1.2"
        imagePullPolicy: "IfNotPresent"
        name: "configure-sysctl"
        resources: {}
        securityContext:
          privileged: true
          runAsUser: 0
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      - command:
        - "ash"
        - "-c"
        - "sleep 5; x=\"0\"; while [ \"$x\" == \"0\" ]; do nslookup ${XP_NODE_NAME}.all\
          \ && x=\"1\"; sleep 2; done"
        env:
        - name: "XP_NODE_NAME"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "metadata.name"
        image: "alpine:3.10"
        imagePullPolicy: "IfNotPresent"
        name: "wait-for-dns"
        resources: {}
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
      restartPolicy: "Always"
      schedulerName: "default-scheduler"
      securityContext:
        fsGroup: 0
        runAsUser: 1337
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: "master"
        name: "config"
      - configMap:
          defaultMode: 420
          name: "extra-config"
        name: "extra-config"
      - name: "blobstore"
        persistentVolumeClaim:
          claimName: "blobstore"
      - name: "snapshots"
        persistentVolumeClaim:
          claimName: "snapshots"
  updateStrategy:
    type: "RollingUpdate"
  volumeClaimTemplates:
  - apiVersion: "v1"
    kind: "PersistentVolumeClaim"
    metadata:
      labels:
        nodeGroup: "master"
        cloud: "mycloud"
        managedBy: "ec-operator"
        name: "qaxp"
        project: "myproject"
      name: "export"
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "3Gi"
      storageClassName: "standard"
      volumeMode: "Filesystem"
---
kind: "Xp7App"
apiVersion: "enonic.cloud/v1alpha1"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "alive"
spec:
  url: "https://repo.enonic.com/public/com/enonic/app/alive/2.0.0/alive-2.0.0.jar"
---
kind: "Xp7App"
apiVersion: "enonic.cloud/v1alpha1"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "snapshotter"
spec:
  url: "https://repo.enonic.com/public/com/enonic/app/snapshotter/2.1.1/snapshotter-2.1.1.jar"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "all-admin"
spec:
  file: "com.enonic.xp.app.main.cfg"
  nodeGroup: "all"
  data: "tourDisabled = true"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "all-system"
spec:
  file: "system.properties"
  nodeGroup: "all"
  data: "xp.suPassword = {sha512}${env.SU_PASS_HASH}\nxp.init.adminUserCreation =\
    \ false"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "data-cluster"
spec:
  file: "com.enonic.xp.cluster.cfg"
  nodeGroup: "data"
  data: "cluster.enabled=true\nnode.name=${env.XP_NODE_NAME}\ndiscovery.unicast.hosts=master-0.all,master-1.all,master-2.all\n\
    network.publish.host=${env.XP_NODE_NAME}.all\n  network.host=${env.XP_NODE_NAME}.all"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "data-elasticsearch"
spec:
  file: "com.enonic.xp.elasticsearch.cfg"
  nodeGroup: "data"
  data: "node.master=false\nnode.data=true\ncluster.name=mycloud-myproject-qaxp\n\
    http.enabled=false\ngateway.expected_master_nodes=2\ngateway.expected_data_nodes=2\n\
    gateway.recover_after_time=5m\ndiscovery.zen.minimum_master_nodes=2\nnetwork.tcp.keep_alive=true"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  annotations:
    neverOverwrite: "true"
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "data-vhosts"
spec:
  file: "com.enonic.xp.web.vhost.cfg"
  nodeGroup: "data"
  data: "enabled = true"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "frontend-cluster"
spec:
  file: "com.enonic.xp.cluster.cfg"
  nodeGroup: "frontend"
  data: "cluster.enabled=true\nnode.name=${env.XP_NODE_NAME}\ndiscovery.unicast.hosts=master-0.all,master-1.all,master-2.all\n\
    network.publish.host=${env.XP_NODE_NAME}.all\n  network.host=${env.XP_NODE_NAME}.all"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "frontend-elasticsearch"
spec:
  file: "com.enonic.xp.elasticsearch.cfg"
  nodeGroup: "frontend"
  data: "node.master=false\nnode.data=false\ncluster.name=mycloud-myproject-qaxp\n\
    http.enabled=false\ngateway.expected_master_nodes=2\ngateway.expected_data_nodes=2\n\
    gateway.recover_after_time=5m\ndiscovery.zen.minimum_master_nodes=2\nnetwork.tcp.keep_alive=true"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  annotations:
    neverOverwrite: "true"
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "frontend-vhosts"
spec:
  file: "com.enonic.xp.web.vhost.cfg"
  nodeGroup: "frontend"
  data: "enabled = true"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "master-cluster"
spec:
  file: "com.enonic.xp.cluster.cfg"
  nodeGroup: "master"
  data: "cluster.enabled=true\nnode.name=${env.XP_NODE_NAME}\ndiscovery.unicast.hosts=master-0.all,master-1.all,master-2.all\n\
    network.publish.host=${env.XP_NODE_NAME}.all\n  network.host=${env.XP_NODE_NAME}.all"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "master-elasticsearch"
spec:
  file: "com.enonic.xp.elasticsearch.cfg"
  nodeGroup: "master"
  data: "node.master=true\nnode.data=false\ncluster.name=mycloud-myproject-qaxp\n\
    http.enabled=false\ngateway.expected_master_nodes=2\ngateway.expected_data_nodes=2\n\
    gateway.recover_after_time=5m\ndiscovery.zen.minimum_master_nodes=2\nnetwork.tcp.keep_alive=true"
---
kind: "Xp7Config"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  annotations:
    neverOverwrite: "true"
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "master-vhosts"
spec:
  file: "com.enonic.xp.web.vhost.cfg"
  nodeGroup: "master"
  data: "enabled = true"
---
kind: "Xp7VHost"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "healthcheck"
spec:
  host: "healthcheck"
  skipIngress: true
  certificate: null
  mappings:
  - nodeGroup: "all"
    source: "/"
    target: "/webapp/com.enonic.app.alive"
    idProviders: null
---
kind: "Xp7VHost"
apiVersion: "enonic.cloud/v1alpha2"
metadata:
  labels:
    cloud: "mycloud"
    managedBy: "ec-operator"
    name: "qaxp"
    project: "myproject"
  name: "localhost"
spec:
  host: "localhost"
  skipIngress: true
  certificate: null
  mappings:
  - nodeGroup: "all"
    source: "/"
    target: "/"
    idProviders: null
